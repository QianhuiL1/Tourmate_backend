<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travelers.data.mapper.TravelersUserMapper">
    
    <resultMap type="TravelersUser" id="TravelersUserResult">
        <result property="UserID"    column="UserID"    />
        <result property="Username"    column="Username"    />
        <result property="Gender"    column="Gender"    />
        <result property="Age"    column="Age"    />
        <result property="Address"    column="Address"    />
        <result property="Password"    column="Password"    />
        <result property="RegistrationTime"    column="RegistrationTime"    />
    </resultMap>

    <sql id="selectTravelersUserVo">
        select UserID, Username, Gender, Age, Address, Password, RegistrationTime from user
    </sql>

    <select id="selectTravelersUserList" parameterType="TravelersUser" resultMap="TravelersUserResult">
        <include refid="selectTravelersUserVo"/>
        <where>  
            <if test="Username != null  and Username != ''"> and Username like concat('%', #{Username}, '%')</if>
            <if test="Gender != null  and Gender != ''"> and Gender = #{Gender}</if>
            <if test="Age != null "> and Age = #{Age}</if>
            <if test="Address != null  and Address != ''"> and Address = #{Address}</if>
            <if test="Password != null  and Password != ''"> and Password = #{Password}</if>
            <if test="RegistrationTime != null "> and RegistrationTime = #{RegistrationTime}</if>
        </where>
    </select>
    
    <select id="selectTravelersUserByUserID" parameterType="Long" resultMap="TravelersUserResult">
        <include refid="selectTravelersUserVo"/>
        where UserID = #{UserID}
    </select>
        
    <insert id="insertTravelersUser" parameterType="TravelersUser">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="UserID != null">UserID,</if>
            <if test="Username != null">Username,</if>
            <if test="Gender != null">Gender,</if>
            <if test="Age != null">Age,</if>
            <if test="Address != null">Address,</if>
            <if test="Password != null">Password,</if>
            <if test="RegistrationTime != null">RegistrationTime,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="UserID != null">#{UserID},</if>
            <if test="Username != null">#{Username},</if>
            <if test="Gender != null">#{Gender},</if>
            <if test="Age != null">#{Age},</if>
            <if test="Address != null">#{Address},</if>
            <if test="Password != null">#{Password},</if>
            <if test="RegistrationTime != null">#{RegistrationTime},</if>
         </trim>
    </insert>

    <update id="updateTravelersUser" parameterType="TravelersUser">
        update user
        <trim prefix="SET" suffixOverrides=",">
            <if test="Username != null">Username = #{Username},</if>
            <if test="Gender != null">Gender = #{Gender},</if>
            <if test="Age != null">Age = #{Age},</if>
            <if test="Address != null">Address = #{Address},</if>
            <if test="Password != null">Password = #{Password},</if>
            <if test="RegistrationTime != null">RegistrationTime = #{RegistrationTime},</if>
        </trim>
        where UserID = #{UserID}
    </update>

    <delete id="deleteTravelersUserByUserID" parameterType="Long">
        delete from user where UserID = #{UserID}
    </delete>

    <delete id="deleteTravelersUserByUserIDs" parameterType="String">
        delete from user where UserID in 
        <foreach item="UserID" collection="array" open="(" separator="," close=")">
            #{UserID}
        </foreach>
    </delete>
</mapper>